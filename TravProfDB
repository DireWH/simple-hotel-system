package part1TLS;

import java.io.*;
import java.util.Objects;
import java.util.StringTokenizer;


import static java.lang.Float.parseFloat;

public class TravProfDB {
    private static final TravProf[] travelerList = new TravProf[20];
    private static int numTravers=0;
    private static int currentTravelerIndex=0;
    private String fileName;

    TravProfDB(String fileName){
        this.fileName=fileName;
    }
    public static void initializeDataBase(String filePath) throws IOException {
        File file=new File(filePath);
        BufferedReader buff= new BufferedReader(new FileReader(file));
        String str;
        while((str=buff.readLine())!=null){
            StringTokenizer inf=new StringTokenizer(str);
            MedCond MEDcond = new MedCond(null,null,null,null);
            TravProf traveler=new TravProf(inf.nextToken(),inf.nextToken(),inf.nextToken(),inf.nextToken(),inf.nextToken(),parseFloat(inf.nextToken()),inf.nextToken(),inf.nextToken(), null);
            MEDcond.updateMdContact(inf.nextToken());
            MEDcond.updateMdPhone(inf.nextToken());
            MEDcond.updateAlgType(inf.nextToken());
            MEDcond.updateIllType(inf.nextToken());
            traveler.updateMedcondinfo(MEDcond);
            travelerList[numTravers]=traveler;
            numTravers+=1;
        }
        //for(int i =0; i<numTravers;i++){
        //    System.out.println(travelerList[i].printall(travelerList[i]));}
    }
    public static void insertNewProfile(TravProf traveler){
        numTravers+=1;
        travelerList[numTravers-1]=traveler;
    }
    public static boolean deletProfile(String travelerID, String lastName){

        int trans =0;
        int res =0;
        System.out.println(numTravers);
        for(int i =0; i<numTravers;i++){

            if (trans==1){
                travelerList[i] = travelerList[i + 1];
            }
            if(Objects.equals(travelerList[i].getTravelID(), travelerID) && Objects.equals(travelerList[i].getLastName(), lastName)){
                travelerList[i]=travelerList[i+1];
                numTravers-=1;
                trans =1;
                res=1;
            }

        }
        System.out.println(numTravers);
        return res != 0;
    }
    public static TravProf findProfile(String travelerID,String lastName){

        for(int i =0; i<numTravers;i++) {

            if(Objects.equals(travelerList[i].getTravelID(), travelerID) && Objects.equals(travelerList[i].getLastName(), lastName)){
                return travelerList[i];
            }
        }
        System.out.println("Can't find profile");
        return null;

    }
    public static TravProf findFirstProfile(){

        return travelerList[0];
    }
    public static TravProf findCurrentProfile(){

        return travelerList[currentTravelerIndex];
    }
    public static void reset(){

        currentTravelerIndex=0;
    }
    public static int forward(){
        if(currentTravelerIndex<numTravers-1) {
            currentTravelerIndex += 1;
            return 1;
        }
        return 0;
    }
    public static int now(){

        return currentTravelerIndex;
    }
    public static void display(){
        for(int i =0; i<numTravers;i++) {
            System.out.println(travelerList[i].printAll());
        }

    }
    public static TravProf findNextProfile(){
        currentTravelerIndex+=1;
        return travelerList[currentTravelerIndex];
    }
    public static void writeAllTravProf(String filepath) throws IOException {
        File allFile=new File(filepath);
        allFile.delete();
        allFile.createNewFile();
        FileWriter writer=new FileWriter(filepath);
        for(int i =0; i<numTravers;i++){
            writer.write(travelerList[i].printAll());
            writer.write("\r\n");
        }
        writer.close();
    }

}
